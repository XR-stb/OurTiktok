// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package messageclient

import (
	"context"

	"OutTiktok/apps/message/message"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetLastMsgReq    = message.GetLastMsgReq
	GetLastMsgRes    = message.GetLastMsgRes
	LastMsg          = message.LastMsg
	MessageActionReq = message.MessageActionReq
	MessageActionRes = message.MessageActionRes
	MessageChatReq   = message.MessageChatReq
	MessageChatRes   = message.MessageChatRes
	MessageInfo      = message.MessageInfo

	Message interface {
		Action(ctx context.Context, in *MessageActionReq, opts ...grpc.CallOption) (*MessageActionRes, error)
		Chat(ctx context.Context, in *MessageChatReq, opts ...grpc.CallOption) (*MessageChatRes, error)
		GetLastMsg(ctx context.Context, in *GetLastMsgReq, opts ...grpc.CallOption) (*GetLastMsgRes, error)
	}

	defaultMessage struct {
		cli zrpc.Client
	}
)

func NewMessage(cli zrpc.Client) Message {
	return &defaultMessage{
		cli: cli,
	}
}

func (m *defaultMessage) Action(ctx context.Context, in *MessageActionReq, opts ...grpc.CallOption) (*MessageActionRes, error) {
	client := message.NewMessageClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}

func (m *defaultMessage) Chat(ctx context.Context, in *MessageChatReq, opts ...grpc.CallOption) (*MessageChatRes, error) {
	client := message.NewMessageClient(m.cli.Conn())
	return client.Chat(ctx, in, opts...)
}

func (m *defaultMessage) GetLastMsg(ctx context.Context, in *GetLastMsgReq, opts ...grpc.CallOption) (*GetLastMsgRes, error) {
	client := message.NewMessageClient(m.cli.Conn())
	return client.GetLastMsg(ctx, in, opts...)
}
