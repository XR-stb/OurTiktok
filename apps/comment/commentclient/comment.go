// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentclient

import (
	"context"

	"OutTiktok/apps/comment/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionReq   = comment.ActionReq
	ActionRes   = comment.ActionRes
	CommentInfo = comment.CommentInfo
	ListReq     = comment.ListReq
	ListRes     = comment.ListRes
	UserInfo    = comment.UserInfo

	Comment interface {
		Action(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionRes, error)
		List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListRes, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

func (m *defaultComment) Action(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionRes, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}

func (m *defaultComment) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListRes, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}
